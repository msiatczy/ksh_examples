#!/bin/ksh
#--------------------------------------------------------------------------
#        Usage: resetPassword.scr -U <user> -login <login> -S <DBSERVER>
#
#  Description: Reset password for login
#
#     Location:	/sccm/dba/sybase/scripts/resetPassword.scr
#
#    Called by:	(optional) Script or Autosys script that calls this script
#
#        Calls:	(optional) Any scripts this script executes
#   
#   Parameters:	<user> - login of the user running the add
#		<login> - login to be added
#		<DBSERVER> - DBSERVER on which to change password
#
#  Modification History:
#	04/25/06 M. Siatczynski	Initial Script
#--------------------------------------------------------------------------
. /sccm/dba/sybase/.dbaSybProfile

#------------------------------------------------------------------------------
# Input parameters
#------------------------------------------------------------------------------
USAGE="ERROR - Usage: $0 -U <user> -login <login> -S <DBSERVER>"

if [ $# -eq 0 ]
then
	echo $USAGE
	exit 1
else
	while [ $# -gt 0 ]
	do
	        case $1 in
			-U)		export EXEUSER=$2;shift 2;;
			-login)		export LOGIN=$2;shift 2;;
			-S)		export DBSERVER=$2;shift 2;;
			-*)		echo $USAGE;exit 1;;
			*)		echo $USAGE;exit 1;;
	        esac
	done
fi

# user and login must be passed
if [ ! "$EXEUSER" -o ! "$LOGIN" -o ! "$DBSERVER" ]
then
	echo $USAGE
	exit 1
fi

#--------------------------------------------------------------------------
#  Initialize variables  
#--------------------------------------------------------------------------
export OUTFILE=$LOGDIR/useradmin/$DBSERVER/$DBSERVER.$LOGIN.resetPassword.$DATETIME

#--------------------------------------------------------------------------
# define cleanup function and trap
#--------------------------------------------------------------------------
#function tempCleanup {
#	test $SQLFILE && \rm -f $SQLFILE
#	test $PWDMSG && \rm -f $PWDMSG
#}

#trap 'tempCleanup' EXIT INT TERM

#------------------------------------------------------------------------------
# Write headers
#------------------------------------------------------------------------------
> $OUTFILE
echo "`date` Resetting password for $LOGIN on $DBSERVER..." >> $OUTFILE
echo "Prompting for password..." >> $OUTFILE

#------------------------------------------------------------------------------
# Prompt for the new password
#------------------------------------------------------------------------------
NEWPW1=""
while [ "$NEWPW1" = "" ]
do
	echo "Enter NEW password for $LOGIN:"
	stty -echo
	read NEWPW1
	stty echo
done

NEWPW2=""
while [ "$NEWPW2" = "" ]
do
	echo "Re-enter NEW password for $LOGIN:"
	stty -echo
	read NEWPW2
	stty echo
done

if [ "$NEWPW1" = "$NEWPW2" ]
then
	export NEWPWD=$NEWPW1
else
	echo "ERROR - Passwords entered do not match.  Exiting." | tee -a $OUTFILE
	exit 1
fi

#------------------------------------------------------------------------------
# run the sql
#------------------------------------------------------------------------------
echo "Executing SQL to change password..." >> $OUTFILE
$ISQLEXE -U$EXEUSER -S$DBSERVER -w200 <<-! | grep -v Password: >> $OUTFILE
`getPass $DBSERVER $EXEUSER`
use master
go
execute sp_password "`getPass $DBSERVER $EXEUSER`","$NEWPWD",$LOGIN
go
!

#------------------------------------------------------------------------------
# Check for errors
# Exit
#------------------------------------------------------------------------------
checkSqlErr $OUTFILE
if [ $? -ne 0 ]
then
        echo "ERROR - resetting password for $LOGIN on $DBSERVER" | tee -a $OUTFILE
        echo "Review $OUTFILE"
        exit 1
else
        echo "Password SUCCESSFULLY reset for $LOGIN on $DBSERVER" | tee -a $OUTFILE
        exit 0
fi
