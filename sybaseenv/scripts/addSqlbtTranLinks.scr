#!/bin/ksh
#--------------------------------------------------------------------------
#        Usage: addSqlbtTranLinks.scr -S <DBSERVER> {-D <DBNAME>|-L <DBLIST> -relink}
#
#  Description: Create links under $DT_TRAN for tran dumps.
#
#     Location:	/sccm/dba/sybase/scripts/addSqlbtTranLinks.scr
#
#    Called by:	(optional) Script or Autosys script that calls this script
#
#        Calls:	(optional) Any scripts this script executes
#   
#   Parameters:	<parm1> - short description of parm if not obvious
#              	<parm2> - short description of parm if not obvious
#
#         NOTE: DBSERVER must be an actual server AND corresond to 
#		a physical control directory of the same name
#
#  Modification History:
#	09/13/02 M. Siatczynski Rewrite original script
#	03/31/04 M. Siatczynski Centralized script
#	03/04/05 M. Siatczynski Add DBNAME parm, which will force creation of a link for one database, add error checking
#	05/02/05 M. Siatczynski Add DBLIST parm, which will force creation of a list of databases
#	02/13/06 M. Siatczynski Implement ISQLEXE, getPass, ADMINLOGIN
#	03/15/06 M. Siatczynski Update hardcoded sbackups.physical to $DT_PHYSICAL (std env variable)
#				Update to use DT_TRAN
#				Add -relink parm
#--------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Initialize variables
#------------------------------------------------------------------------------
USAGE="ERROR - Usage: $0 -S <DBSERVER> {-D <DBNAME>|-L <DBLIST> -relink}"

if [ $# -eq 0 ]
then
	echo $USAGE
	exit 1
else
	while [ $# -gt 0 ]
	do
	        case $1 in
	                -S)	export DBSERVER=$2;shift 2;;
	                -D)	export ONEDBNAME=$2;shift 2;;
	                -L)	export DBLIST=$2;shift 2;;
	                -relink)	export RELINK=1;shift 1;;
	                -*)	echo $USAGE;exit 1;;
	                *)	echo $USAGE;exit 1;;
	        esac
	done
fi

if [ ! "$DBSERVER" ]
then
        echo $USAGE
        echo "ERROR - DBSERVER must be passed"
        exit 1
fi

if [ "$ONEDBNAME" -a "$DBLIST" ]
then
        echo $USAGE
        echo "ERROR - DBNAME and DBLIST are mutually exclusive"
        exit 1
fi

test ! "$RELINK" && export RELINK=0

# NOTE:  SETDBSERVER must be set AFTER case statement and profile must be sourced AFTER SETDBSERVER
export SETDBSERVER=$DBSERVER
. /sccm/dba/sybase/.dbaSybProfile

export TMPDBLIST=/tmp/dblist.$$
export TRANBASE=$DT_TRAN/$DBSERVER
export PHYSBASE=$DT_PHYSICAL/$DBSERVER
#--------------------------------------------------------------------------
# define cleanup function and trap
#--------------------------------------------------------------------------
function tempCleanup {
	test $TMPDBLIST && \rm -f $TMPDBLIST
}

trap 'tempCleanup' EXIT INT TERM

#--------------------------------------------------------------------------
#  Get a list of databases that do NOT have trunc log on chkpt set
#  If only processing one database, do not get list from server
#--------------------------------------------------------------------------
if [ "$ONEDBNAME" ]
then
	echo $ONEDBNAME > $TMPDBLIST
elif [ "$DBLIST" ]
then
	if [ -s "$DBLIST" ]
	then
		cat $DBLIST > $TMPDBLIST
	else
		echo "ERROR - $DBLIST does not exist or is 0 bytes"
		exit 1
	fi
else
	$ISQLEXE -U$ADMINLOGIN -S$DBSERVER -w200 -b <<-! | grep -v Password > $TMPDBLIST
	`getPass $DBSERVER $ADMINLOGIN`
	set nocount on
	go
	select name from master..sysdatabases where status & 8 <> 8
	go
	!

#  Check for sql errors
	checkSqlErr $TMPDBLIST
	if [ $? -eq 1 ]
	then
		echo "ERROR - unable to obtain list of databases from $DBSERVER"
		cat $TMPDBLIST
		exit 1
	fi

#  Is there anything to process?
	if [ ! -s $TMPDBLIST ]
	then
		echo "\nNo links created.  All databases have 'trunc log on chkpt set.\n"
		exit 0
	fi
fi

#--------------------------------------------------------------------------
#  Make the control directories if they don't exist
#--------------------------------------------------------------------------
test ! -d $DT_TRAN && mkdir $DT_TRAN
test ! -d $TRANBASE && mkdir $TRANBASE

#--------------------------------------------------------------------------
#  Create link to .dtoptions file from the physical control directory
#  Copy the empty .dtoptions file under tran/DBSERVER control directory
#--------------------------------------------------------------------------
test ! -L $DT_TRAN/.dtoptions && ln -s $DT_PHYSICAL/.dtoptions $DT_TRAN/.dtoptions
test ! -f $TRANBASE/.dtoptions && cp -p $PHYSBASE/.dtoptions $TRANBASE/.dtoptions

#--------------------------------------------------------------------------
#  Make the link if it doesn't exist
#--------------------------------------------------------------------------
cat $TMPDBLIST |
while read DBNAME
do
	export $DBNAME
	export TRANFILE=$TRANBASE/$DBNAME
	export PHYSFILE=$PHYSBASE/$DBNAME

        test -L $TRANFILE -a $RELINK -eq 1 && \rm $TRANFILE

	if [ ! -L $TRANFILE ]
	then
		echo "Creating link:  $TRANFILE -> $PHYSFILE"
		ln -s $PHYSFILE $TRANFILE
	else
		echo "LINK EXISTS:  $TRANFILE -> $PHYSFILE"
	fi
done
echo "\nReview links under $TRANBASE\n"

#--------------------------------------------------------------------------
#  exit
#--------------------------------------------------------------------------
exit 0
