#!/bin/ksh
#--------------------------------------------------------------------------
#        Usage: findExpiredPassword.scr -S <DBSERVER>|all
#
#  Description: Find logins with expired passwords on one or more ASEs
#
#     Location:	/sccm/dba/sybase/scripts
#
#    Called by:	(optional) Script or Autosys script that calls this script
#
#        Calls:	(optional) Any scripts this script executes
#   
#   Parameters:	<DBSERVER> - DBSERVER|all
#
#  Modification History:
#       09/23/10 M. Siatczynski Initial script
#--------------------------------------------------------------------------
. /sccm/dba/sybase/.dbaSybProfile

#------------------------------------------------------------------------------
# Input parameters
#------------------------------------------------------------------------------
USAGE="ERROR - Usage: $0 -S <DBSERVER>|all"

if [ $# -eq 0 ]
then
	echo $USAGE
	exit 1
else
	while [ $# -gt 0 ]
	do
	        case $1 in
			-S)		export ONEDBSERVER=$2;shift 2;;
			-*)		echo $USAGE;exit 1;;
			*)		echo $USAGE;exit 1;;
	        esac
	done
fi

# these parms must be passed
if [ ! "$ONEDBSERVER" ]
then
	echo $USAGE
	exit 1
fi

#--------------------------------------------------------------------------
#  Initialize variables  
#--------------------------------------------------------------------------
export DBSERVERLIST=/tmp/dbserver.lst.$$
export SQLFILE=/tmp/sqlfile.$$
export SQLOUT=/tmp/sqlout.$$
export HIGHRC=0
export LOGFILE=$LOGDIR/useradmin/central/findExpiredPassword.$DATETIME

#--------------------------------------------------------------------------
#  Build server list
#--------------------------------------------------------------------------
if [ "$ONEDBSERVER" = "all" ]
then
	getAse15List > $DBSERVERLIST
else
	echo $ONEDBSERVER > $DBSERVERLIST
fi
#--------------------------------------------------------------------------
# define cleanup function and trap
#--------------------------------------------------------------------------
function tempCleanup {
	test $DBSERVERLIST && \rm -f $DBSERVERLIST
	test $SQLFILE && \rm -f $SQLFILE
	test $SQLOUT && \rm -f $SQLOUT
}

trap 'tempCleanup' EXIT INT TERM

#------------------------------------------------------------------------------
# write headers
#------------------------------------------------------------------------------
> $LOGFILE
echo "`date` START Check for logins with expired passwords on the following ASEs:" >> $LOGFILE
cat $DBSERVERLIST >> $LOGFILE
echo "" >> $LOGFILE

#------------------------------------------------------------------------------
# Format the SQL
#------------------------------------------------------------------------------
> $SQLFILE
echo "use master" >> $SQLFILE
echo "go" >> $SQLFILE
echo "set nocount on" >> $SQLFILE
echo "go" >> $SQLFILE

echo "select @@servername,name,fullname from master..syslogins where status&4=4" >> $SQLFILE
echo "order by name" >> $SQLFILE
echo "go" >> $SQLFILE

#------------------------------------------------------------------------------
# Execute the SQL on each DBSERVER
# append the output to the logfile
#------------------------------------------------------------------------------
cat $DBSERVERLIST |
while read DBSERVER
do
	getPass $DBSERVER $ADMINLOGIN | $ISQLEXE -U$ADMINLOGIN -S$DBSERVER -w200 -b -i$SQLFILE | grep -v Password: | sed -e 's/^ //g' > $SQLOUT

#------------------------------------------------------------------------------
# Check for errors
#------------------------------------------------------------------------------
	checkSqlErr $SQLOUT
	if [ $? -eq 1 ]
	then
		export HIGHRC=1
	fi

#------------------------------------------------------------------------------
# write trailers for ASE
#------------------------------------------------------------------------------
	echo "" >> $LOGFILE

	if [ ! -s $SQLOUT ]
	then
		echo "$DBSERVER - No logins with expired passwords found" >> $LOGFILE
	else
		cat $SQLOUT >> $LOGFILE
	fi
done

#------------------------------------------------------------------------------
# write final trailer 
#------------------------------------------------------------------------------
echo "\n`date` END Check logins for expired passwords" >> $LOGFILE

#------------------------------------------------------------------------------
# exit with final return status
#------------------------------------------------------------------------------
if [ $HIGHRC -eq 1 ]
then
        echo "Script FAILED - output in $LOGFILE"
        exit 1
else
        echo "Script SUCCESSFUL - output in $LOGFILE"
	cat $LOGFILE
        exit 0
fi
