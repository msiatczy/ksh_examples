#!/bin/ksh
#--------------------------------------------------------------------------
#        Usage: switchToInquiry.scr -S <DBSERVER> {-D <dbname> -noprompt}
#
#  Description: Switch users to inquiry group (exclude exceptions)
#
#     Location:	/sccm/home/dba/sybase/scripts/switchToInquiry.scr
#
#    Called by:	(optional) Script or Autosys script that calls this script
#
#        Calls:	(optional) Any scripts this script executes
#   
#   Parameters:	<parm1> - short description of parm if not obvious
#              	<parm2> - short description of parm if not obvious
#
#  Modification History:
#	06/25/03 M. Siatczynski Initial script
#	07/11/03 M. Siatczynski Only print successful message if running from prompt mode
#	09/22/05 M. Siatczynski Changed USER to DBUSER (USER is a unix env variable)
#--------------------------------------------------------------------------
. /sccm/home/dba/sybase/.sybProfile

#------------------------------------------------------------------------------
# Sample block for input parameters
#------------------------------------------------------------------------------
export USAGE="ERROR - Usage: $0 -S <DBSERVER> {-D <dbname> -noprompt}"
export CALLED="$0 $*"

if [ $# -eq 0 ]
then
        echo $USAGE
        exit 1
else
        while [ $# -gt 0 ]
        do
                case $1 in
                        -S)     export DBSERVER=$2;shift 2;;
                        -D)     export DBNAME=$2;shift 2;;
                        -noprompt)  export PROMPT=0;shift 1;;
                        -*)     echo $USAGE;exit 1;;
                        *)      echo $USAGE;exit 1;;
                esac
        done
fi

test ! "$PROMPT" && export PROMPT=1
if [ ! "$DBSERVER" ]
then
        echo $USAGE
        exit 1
fi

#--------------------------------------------------------------------------
#  Initialize Variables  
#--------------------------------------------------------------------------
export DBLIST=/tmp/dblist.$$
export CURALIAS=/tmp/alias.$$
export CURUSER=/tmp/user.$$
export TMPALIAS=/tmp/tmpalias.$$
export TMPUSER=/tmp/tmpuser.$$
export XALIAS=/tmp/xalias.$$
export XUSER=/tmp/xuser.$$
export TEMPSQL=/tmp/tempsql.$$
export ALIAS_EXCEPTIONS=$CENTCTLDIR/$DBSERVER/alias.exceptions
export USER_EXCEPTIONS=$CENTCTLDIR/$DBSERVER/user.exceptions

if [ ! -f $ALIAS_EXCEPTIONS ]
then
	touch $ALIAS_EXCEPTIONS
fi

if [ ! -f $USER_EXCEPTIONS ]
then
	touch $USER_EXCEPTIONS
fi

#--------------------------------------------------------------------------
# define cleanup function and trap
#--------------------------------------------------------------------------
function tempCleanup {
	test -f $DBLIST && \rm -f $DBLIST
	test -f $CURALIAS && \rm -f $CURALIAS
	test -f $CURUSER && \rm -f $CURUSER
	test -f $TMPALIAS && \rm -f $TMPALIAS
	test -f $TMPUSER && \rm -f $TMPUSER
	test -f $XALIAS && \rm -f $XALIAS
	test -f $XUSER && \rm -f $XUSER
	test -f $TEMPSQL && \rm -f $TEMPSQL
}

trap 'tempCleanup' EXIT INT TERM

#------------------------------------------------------------------------------
# Confirm action for server specified
#------------------------------------------------------------------------------
if [ $PROMPT -eq 1 ]
then
        echo "\n**************************************************************************************\n"
        echo "WARNING:  ALTERING PERMISSIONS COULD BE VERY DESTRUCTIVE IN A PRODUCTION ENVIRONMENT !!\n"
        echo "**************************************************************************************\n"
        echo "You are about to switch all users/aliases to the inquiry group for $DBSERVER $DBNAME\n"
        CONTINUE=""
        while [ "$CONTINUE" != "Y" -a "$CONTINUE" != "y" -a "$CONTINUE" != "N" -a "$CONTINUE" != "n" ]
        do
                echo "DO YOU WISH TO CONTINUE? {y/n}"
                read CONTINUE
        done
 
        if [ "$CONTINUE" = "n" -o "$CONTINUE" = "N" ]
        then
                echo "\nScript exiting - no action taken on $DBSERVER.\n"
                exit 1
        fi
fi

#--------------------------------------------------------------------------
#  If DBNAME not passed, get list of all databases on DBSERVER
#  Set name of output file and initialize
#--------------------------------------------------------------------------
if [ "$DBNAME" ]
then
	export OUTFILE=$CENTLOGDIR/$DBSERVER.$DBNAME.switchToInquiry.$DATETIME
	echo $DBNAME > $DBLIST
else
	export OUTFILE=$CENTLOGDIR/$DBSERVER.switchToInquiry.$DATETIME
	$ISQLEXE -U$ADMINLOGIN -S$DBSERVER -w200 -b <<-! | grep -v Password > $DBLIST
	`getPass $DBSERVER $ADMINLOGIN`
	set nocount on
	go
	select name from master..sysdatabases where name not in ('master','model','sybsystemdb','sybsystemprocs','tempdb') order by name
	go
	!
fi

> $OUTFILE

#--------------------------------------------------------------------------
#  Find all aliases on DBSERVER
#--------------------------------------------------------------------------
> $TEMPSQL
> $CURALIAS

echo "set nocount on" >> $TEMPSQL
echo "go" >> $TEMPSQL

cat $DBLIST |
while read DBNAME
do
	export DBNAME
	echo "select '$DBNAME',suser_name(suid) from $DBNAME..sysalternates" >> $TEMPSQL
	echo "go" >> $TEMPSQL
done

getPass $DBSERVER $ADMINLOGIN | $ISQLEXE -U$ADMINLOGIN -S$DBSERVER -b -i$TEMPSQL | grep -v Password | sed -e 's/^ *//g' -e 's/ *$//g' -e 's/  */ /g' | sort >> $CURALIAS

#--------------------------------------------------------------------------
#  Eliminate aliases from this list based on exception list
#	remove all leading and trailing blanks from the exception file
#		and make sure there is only a single space between dbname and alias
#	sort the file so it matches the one coming from sql query
#	compare the files
#--------------------------------------------------------------------------
sed -e 's/^ *//g' -e 's/ *$//g' -e 's/  */ /g' $ALIAS_EXCEPTIONS | sort > $XALIAS
comm -23 $CURALIAS $XALIAS > $TMPALIAS

#--------------------------------------------------------------------------
#  Drop aliases and re-add as normal users in inquiry group
#--------------------------------------------------------------------------
> $TEMPSQL
echo "set nocount on" >> $TEMPSQL
echo "go" >> $TEMPSQL

cat $TMPALIAS |
while read DBNAME ALIAS
do
	export DBNAME ALIAS
	echo "use $DBNAME" >> $TEMPSQL
	echo "go" >> $TEMPSQL
        echo "if (select db_name()) = '$DBNAME'" >> $TEMPSQL
	echo "begin" >> $TEMPSQL
	echo "execute sp_dropalias $ALIAS" >> $TEMPSQL
	echo "execute sp_adduser $ALIAS,$ALIAS,inquiry" >> $TEMPSQL
	echo "end" >> $TEMPSQL
	echo "go" >> $TEMPSQL
done

getPass $DBSERVER $ADMINLOGIN | $ISQLEXE -U$ADMINLOGIN -S$DBSERVER -e -b -i$TEMPSQL | grep -v Password >> $OUTFILE

#--------------------------------------------------------------------------
#  Find all users on DBSERVER that are not in inquiry group
#  automatically include the guest user
#  automatically exclude probe, patrol, and the maint users
#--------------------------------------------------------------------------
> $TEMPSQL
> $CURUSER

echo "set nocount on" >> $TEMPSQL
echo "go" >> $TEMPSQL

cat $DBLIST |
while read DBNAME
do
	export DBNAME
	echo "use $DBNAME" >> $TEMPSQL
	echo "go" >> $TEMPSQL
	echo "select '$DBNAME',user_name(uid),user_name(gid) from $DBNAME..sysusers" >> $TEMPSQL
	echo "where db_name() = '$DBNAME' and uid > 1 and uid < 16000 and" >> $TEMPSQL
	echo "user_name(gid) <> 'inquiry' and user_name(uid) not in ('probe','patrol','${DBNAME}_maint')" >> $TEMPSQL
	echo "go" >> $TEMPSQL
done

getPass $DBSERVER $ADMINLOGIN | $ISQLEXE -U$ADMINLOGIN -S$DBSERVER -b -i$TEMPSQL | grep -v Password | sed -e 's/^ *//g' -e 's/ *$//g' -e 's/  */ /g' | sort >> $CURUSER

#--------------------------------------------------------------------------
#  Eliminate users from this list based on exception list
#--------------------------------------------------------------------------
sed -e 's/^ *//g' -e 's/ *$//g' -e 's/  */ /g' $USER_EXCEPTIONS | sort > $XUSER
comm -23 $CURUSER $XUSER > $TMPUSER

#--------------------------------------------------------------------------
#  Switch remaining users to inquiry group
#--------------------------------------------------------------------------
> $TEMPSQL
echo "set nocount on" >> $TEMPSQL
echo "go" >> $TEMPSQL

cat $TMPUSER |
while read DBNAME DBUSER GROUP
do
	export DBNAME DBUSER GROUP
	echo "use $DBNAME" >> $TEMPSQL
	echo "go" >> $TEMPSQL
        echo "if (select db_name()) = '$DBNAME'" >> $TEMPSQL
	echo "execute sp_changegroup inquiry, $DBUSER" >> $TEMPSQL
	echo "go" >> $TEMPSQL
done

getPass $DBSERVER $ADMINLOGIN | $ISQLEXE -U$ADMINLOGIN -S$DBSERVER -e -b -i$TEMPSQL | grep -v Password >> $OUTFILE

#-----------------------------------------------------------------------
# Check for errors
# If errors, exit with 1, else exit with 0
#-----------------------------------------------------------------------
egrep '(error|Msg|CT-LIB)' $OUTFILE > /dev/null
export RC=$?
if [ $RC -eq 0 ]
then
	echo "$0 FAILED"
	echo "Review errors in $OUTFILE"
	exit 1
else
	test $PROMPT -eq 1 && echo "$0 SUCCESSFUL"
	exit 0
fi
