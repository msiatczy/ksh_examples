#!/bin/ksh
#--------------------------------------------------------------------------
#        Usage: updDbaPassword.scr -S <DBSERVER>|all -login <DBA login>
#
#  Description: Update password on one or more ASEs for a specific DBA login
#
#     Location:	/sccm/dba/sybase/scripts/updDbaPassword.scr
#
#    Called by:	(optional) Script or Autosys script that calls this script
#
#        Calls:	(optional) Any scripts this script executes
#   
#   Parameters:	<login> - DBA login for which to change password
#		<DBSERVER> - DBSERVER on which to change password
#
#  NOTE:  DBA login MUST exist in $DBALOGINLIST
#
#  Modification History:
#	07/24/06 M. Siatczynski	Initial Script
#--------------------------------------------------------------------------
. /sccm/dba/sybase/.dbaSybProfile

#------------------------------------------------------------------------------
# Input parameters
#------------------------------------------------------------------------------
USAGE="ERROR - Usage: $0 -S <DBSERVER>|all -login <DBA login>"

if [ $# -eq 0 ]
then
	echo $USAGE
	exit 1
else
	while [ $# -gt 0 ]
	do
	        case $1 in
			-S)		export ONEDBSERVER=$2;shift 2;;
			-login)		export DBALOGIN=$2;shift 2;;
			-*)		echo $USAGE;exit 1;;
			*)		echo $USAGE;exit 1;;
	        esac
	done
fi

# user and login must be passed
if [ ! "$DBALOGIN" -o ! "$ONEDBSERVER" ]
then
	echo $USAGE
	exit 1
fi

# make sure the login exists in the standard dba login list
# the list is delimited with "|"
grep "^$DBALOGIN|" $DBALOGINLIST > /dev/null
if [ $? -ne 0 ]
then
	echo "ERROR - $DBALOGIN must exist in $DBALOGINLIST"
	exit 1
fi

#--------------------------------------------------------------------------
#  Initialize variables  
#--------------------------------------------------------------------------
export LOGFILE=$LOGDIR/useradmin/central/updDbaPassword.$DBALOGIN.$DATETIME
export SQLOUT=/tmp/sqlout.$$
export DBSERVERLIST=/tmp/dbserverlist.$$
export HIGHRC=0

#--------------------------------------------------------------------------
# define cleanup function and trap
#--------------------------------------------------------------------------
function tempCleanup {
	test $SQLOUT && \rm -f $SQLOUT
	test $DBBSERVERLIST && \rm -f $DBBSERVERLIST
}

trap 'tempCleanup' EXIT INT TERM

#------------------------------------------------------------------------------
# Create working list
#------------------------------------------------------------------------------
if [ "$ONEDBSERVER" = "all" ]
then
	getPrimaryAseList > $DBSERVERLIST
else
	echo $ONEDBSERVER > $DBSERVERLIST
fi

#------------------------------------------------------------------------------
# Write headers
#------------------------------------------------------------------------------
> $LOGFILE
chmod 700 $LOGFILE
echo "`date` Updating password for $DBALOGIN on the following ASEs:" >> $LOGFILE
cat $DBSERVERLIST >> $LOGFILE
echo "\nPrompting for password...\n" >> $LOGFILE

#------------------------------------------------------------------------------
# Prompt for the new password
#------------------------------------------------------------------------------
NEWPW1=""
while [ "$NEWPW1" = "" ]
do
	echo "Enter NEW password for $DBALOGIN:"
	stty -echo
	read NEWPW1
	stty echo
done

NEWPW2=""
while [ "$NEWPW2" = "" ]
do
	echo "Re-enter NEW password for $DBALOGIN:"
	stty -echo
	read NEWPW2
	stty echo
done

if [ "$NEWPW1" = "$NEWPW2" ]
then
	export NEWPWD=$NEWPW1
else
	echo "ERROR - Passwords entered do not match.  Exiting." | tee -a $LOGFILE
	exit 1
fi

echo ""
#------------------------------------------------------------------------------
# run the sql against each ASE
# Check for errors
#------------------------------------------------------------------------------
cat $DBSERVERLIST |
while read DBSERVER
do
	> $SQLOUT
	$ISQLEXE -U$ADMINLOGIN -S$DBSERVER -w200 <<-! | grep -v Password: >> $SQLOUT
	`getPass $DBSERVER $ADMINLOGIN`
	use master
	go
	execute sp_password "`getPass $DBSERVER $ADMINLOGIN`","$NEWPWD",$DBALOGIN
	go
	!

	checkSqlErr $SQLOUT
	if [ $? -ne 0 ]
	then
	        echo "$DBSERVER - password update FAILED" | tee -a $LOGFILE
	        export HIGHRC=1
	else
	        echo "$DBSERVER - password update SUCCESSFUL" | tee -a $LOGFILE
	fi

	cat $SQLOUT >> $LOGFILE
done

#------------------------------------------------------------------------------
# Exit
#------------------------------------------------------------------------------
if [ $HIGHRC -ne 0 ]
then
        echo "\nERROR - password update FAILED for $DBALOGIN"
        echo "Review $LOGFILE"
        exit 1
else
        echo "\nPassword update SUCCESSFUL for $DBALOGIN" | tee -a $LOGFILE
        exit 0
fi
