#!/bin/ksh
#--------------------------------------------------------------------------
#        Usage: createActive.scr -L <control list> -RS <repserver> -P <maint user password> -fmt|-run {-noprompt}
#
#  Description: Create active connection
#
#     Location:	Full directory path for location of script.  If there is a
#		master copy, mention where it is located.
#
#    Called by:	(optional) Script or Autosys script that calls this script
#
#        Calls:	(optional) Any scripts this script executes
#   
#   Parameters:	<control list> - input list of servers and databases
#              	<repserver> - replication server
# 		<maint user password> - maint user password - typically the same for all replicated databases
#
#   NOTE:  -L <control list> and other parameters are mutually exclusive.
#
#  Modification History:
#	06/23/03 M. Siatczynski	Initial Script (rewrite)
#	07/23/04 M. Siatczynski	Centralized script
#	08/17/05 M. Siatczynski	Set error class to custom_error_class
#	02/21/06 M. Siatczynski	Implement ISQLEXE, getPass, ADMINLOGIN
#       09/16/10 K. Sawant      Added dummy variable to incorporate MSA's control list
#--------------------------------------------------------------------------
. /sccm/dba/sybase/.dbaSybProfile

#------------------------------------------------------------------------------
#  Initialize Parameters
#--------------------------------------------------------------------------

export USAGE="\nERROR - Usage: $0 -L <control list> -RS <repserver> -P <maint user password> -fmt|-run {-noprompt}"
export CALLED="$0 $*"

if [ $# -eq 0 ]
then
        echo $USAGE
        exit 1
else
        while [ $# -gt 0 ]
        do
                case $1 in
                        -L)     export LISTFILE=$2;shift 2;;
                        -RS)    export REPSERVER=$2;shift 2;;
                        -P)     export MAINTPWD=$2;shift 2;;
                        -fmt)   export FMT=1;shift 1;;
                        -run)   export RUN=1;shift 1;;
                        -noprompt)   export PROMPT=0;shift 1;;
                        -*)     echo $USAGE;exit 1;;
                        *)      echo $USAGE;exit 1;;
                esac
        done
fi

test ! "$FMT" && export FMT=0
test ! "$RUN" && export RUN=0
test ! "$PROMPT" && export PROMPT=1

#--------------------------------------------------------------------------
#  Verify Parameters
#--------------------------------------------------------------------------
# fmt and/or run must be passed
if [ $FMT -eq 0 -a $RUN -eq 0 ]
then
	echo "$USAGE"
	echo "\n-fmt and/or -run MUST be passed\n"
	exit 1
fi

# repserver must be passed
if [ ! "$REPSERVER" ]
then
	echo "$USAGE"
	echo "\nrepserver MUST be passed\n"
	exit 1
fi

export SQLFILE=$SQLDIR/replication/$REPSERVER.createActive.sql

if [ "$LISTFILE" ]
then
#LISTFILE must exist under central control directory
        CTLFILE=$CTLDIR/replication/$LISTFILE
        if [ ! -s $CTLFILE ]
        then
                echo "\nERROR - $CALLED"
                echo "\n$CTLFILE does not exist or is 0 bytes\n"
                exit 1
        fi

#MAINTPWD must be passed if LISTFILE is passed
        if [ ! "$MAINTPWD" ]
        then
                echo "\nERROR - $CALLED"
                echo "\nmaint user password must be passed with control list\n"
                exit 1
        fi
else
#if LISTFILE wasn't passed, all other parameters must be passed
        if [ ! "$REPSERVER" -o $RUN -eq 0 ]
        then
                echo "$USAGE"
                echo "\nIf control list is not passed, <repserver>, <dbserver> and -run MUST be passed.\n"
                exit 1
# verify sql file exists
	else
		if [ ! -s "$SQLFILE" ]
		then
                	echo "$USAGE"
	                echo "\n$SQLFILE does not exist - rerun script with -fmt option.\n"
	                exit 1
		fi			
        fi
fi

#--------------------------------------------------------------------------
#  Format the sql
#--------------------------------------------------------------------------
if [ $FMT -eq 1 ]
then
	> $SQLFILE

	cat $CTLFILE |
	while read PDS DBNAME dummy LDS LDB dummy
	do
		export PDS DBNAME dummy LDS LDB dummy
		echo "create connection to $PDS.$DBNAME" >> $SQLFILE
		echo "set error class custom_error_class" >> $SQLFILE
		echo "set function string class rs_sqlserver_function_class" >> $SQLFILE
		echo "set username ${DBNAME}_maint" >> $SQLFILE
		echo "set password '$MAINTPWD'" >> $SQLFILE
		echo "with log transfer on, dsi_suspended" >> $SQLFILE
		echo "as active for $LDS.$LDB" >> $SQLFILE
		echo "go" >> $SQLFILE
	done
#	echo "\nSQL file(s) generated:"
#	echo "$SQLFILE"
fi

#--------------------------------------------------------------------------
#  Run the SQL
#--------------------------------------------------------------------------
if [ $RUN -eq 1 ]
then
#--------------------------------------------------------------------------
#  PROMPT TO CONTINUE
#--------------------------------------------------------------------------
	if [ $PROMPT -eq 1 ]
	then
		echo "\nYou are about to CREATE active connection(s) on $REPSERVER using SQL in $SQLFILE\n"
		export CONTINUE=""
		while [ "$CONTINUE" != "Y" -a "$CONTINUE" != "y" -a "$CONTINUE" != "N" -a "$CONTINUE" != "n" ]
		do
			echo "DO YOU WISH TO CONTINUE? {y/n}"
			read CONTINUE
		done
		if [ "$CONTINUE" = "n" -o "$CONTINUE" = "N" ]
		then
			echo "\nExiting - No SQL run against $REPSERVER\n"
			exit 0
		fi
	fi

	echo "Running SQL in $SQLFILE..."
	export OUTFILE=$LOGDIR/replication/$REPSERVER/$REPSERVER.createActive.$DATETIME
	> $OUTFILE
	getPass $REPSERVER $ADMINLOGIN | $ISQLEXE -U$ADMINLOGIN -S$REPSERVER -w200 -e -i$SQLFILE | grep -v Password >> $OUTFILE

#--------------------------------------------------------------------------
#  Check output
#--------------------------------------------------------------------------
	checkSqlErr $OUTFILE
	if [ $? -ne 0 ]
	then
	        echo "Script FAILED"
	        echo "\nReview output in $OUTFILE\n"
	        exit 1
	else
	        echo "Script SUCCESSFUL"
	        exit 0
	fi
fi

exit 0
