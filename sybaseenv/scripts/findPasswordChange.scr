#!/bin/ksh
#--------------------------------------------------------------------------
#        Usage: findPasswordChange.scr -S <DBSERVER> -L <login|list of logins> {-since <'date time'>}
#
#  Description: Get the passwd date for one or more logins on a specific DBSERVER since optional datetime specified
#		Output of script is a semicolon delimited list of logins and their password change date
#
#     Location:	/sccm/dba/sybase/scripts/findPasswordChange.scr
#
#    Called by:	(optional) Script or Autosys script that calls this script
#
#        Calls:	(optional) Any scripts this script executes
#   
#   Parameters:	<DBSERVER> - DBSERVER
#		<login|list> - single login or path to list of logins to check
#
#  Modification History:
#       08/28/06 M. Siatczynski Initial script
#--------------------------------------------------------------------------
. /sccm/dba/sybase/.dbaSybProfile

#------------------------------------------------------------------------------
# Input parameters
#------------------------------------------------------------------------------
USAGE="ERROR - Usage: $0 -S <DBSERVER> -L <login|list of logins> {-since <'date time'>}"

if [ $# -eq 0 ]
then
	echo $USAGE
	exit 1
else
	while [ $# -gt 0 ]
	do
	        case $1 in
			-S)		export DBSERVER=$2;shift 2;;
			-L)		export LOGINSPEC=$2;shift 2;;
			-since)		export SINCE=$2;shift 2;;
			-*)		echo $USAGE;exit 1;;
			*)		echo $USAGE;exit 1;;
	        esac
	done
fi

# these parms must be passed
if [ ! "$DBSERVER" -o ! "$LOGINSPEC" ]
then
	echo $USAGE
	exit 1
fi

#--------------------------------------------------------------------------
#  Initialize variables  
#--------------------------------------------------------------------------
export SQLFILE=/tmp/sqlfile.$$
export SQLOUT=/tmp/sqlout.$$
export LOGINLIST=/tmp/loginlist.$$
export HIGHRC=0
export LOGFILE=$LOGDIR/useradmin/$DBSERVER/$DBSERVER.findPasswordChange.$DATETIME

#--------------------------------------------------------------------------
# define cleanup function and trap
#--------------------------------------------------------------------------
function tempCleanup {
	test $SQLFILE && \rm -f $SQLFILE
	test $SQLOUT && \rm -f $SQLOUT
	test $LOGINLIST && \rm -f $LOGINLIST
}

trap 'tempCleanup' EXIT INT TERM

#------------------------------------------------------------------------------
# format list of logins
#------------------------------------------------------------------------------
# make sure control file exists and has entries
if [ -f $LOGINSPEC ]
then
	if [ -s $LOGINSPEC ]
	then
		cat $LOGINSPEC > $LOGINLIST
	else
		echo "ERROR - $LOGINSPEC is 0 bytes"
		exit 1
	fi
else
# make sure the loginspec doesn't contain slashes--otherwise it may be an invalid file reference
	echo $LOGINSPEC | grep '/' > /dev/null
	if [ $? -eq 0 ]
	then
		echo "ERROR - $LOGINSPEC is not valid--possible invalid filename?"
		exit 1
	else
		echo $LOGINSPEC > $LOGINLIST
	fi
fi

#------------------------------------------------------------------------------
# write headers
#------------------------------------------------------------------------------
> $LOGFILE
echo "`date` START Check password change dates on $DBSERVER for the following list of logins:" >> $LOGFILE
cat $LOGINLIST >> $LOGFILE

#------------------------------------------------------------------------------
# Format the SQL to check the list of logins
#------------------------------------------------------------------------------
echo "\nFormatting SQL..." >> $LOGFILE

> $SQLFILE
echo "use master" >> $SQLFILE
echo "go" >> $SQLFILE
echo "set nocount on" >> $SQLFILE
echo "go" >> $SQLFILE

echo "select name+';'+convert(char,pwdate,9)" >> $SQLFILE
echo "from master..syslogins" >> $SQLFILE
echo "where name in (" >> $SQLFILE
export FIRSTLOGIN=1
cat $LOGINLIST |
while read LOGIN
do
	test $FIRSTLOGIN -eq 0 && echo ",\"$LOGIN\"" >> $SQLFILE || echo "\"$LOGIN\"" >> $SQLFILE
	test $FIRSTLOGIN -eq 1 && export FIRSTLOGIN=0
done

echo ")" >> $SQLFILE
# if -since was passed, tack it onto the query
test "$SINCE" && echo "and pwdate >= \"$SINCE\"" >> $SQLFILE
echo "go" >> $SQLFILE

#------------------------------------------------------------------------------
# Execute the SQL
# append the output to the logfile
#------------------------------------------------------------------------------
getPass $DBSERVER $ADMINLOGIN | $ISQLEXE -U$ADMINLOGIN -S$DBSERVER -w200 -b -i$SQLFILE | grep -v Password: | sed -e 's/^ //g'  > $SQLOUT

#------------------------------------------------------------------------------
# Check for errors
#------------------------------------------------------------------------------
checkSqlErr $SQLOUT
if [ $? -eq 1 ]
then
	export HIGHRC=1
fi

#------------------------------------------------------------------------------
# write trailers
#------------------------------------------------------------------------------
if [ -s $SQLOUT ]
then
	echo "\n`date` Password change detail:" >> $LOGFILE
else
	echo "\n`date` $DBSERVER - No password changes since $SINCE for the logins listed above." >> $LOGFILE
fi

cat $SQLOUT >> $LOGFILE
echo "\n`date` END Check password change dates on $DBSERVER" >> $LOGFILE

#------------------------------------------------------------------------------
# exit with final return status
#------------------------------------------------------------------------------
if [ $HIGHRC -eq 1 ]
then
        echo "Script FAILED - output in $LOGFILE"
        exit 1
else
	cat $SQLOUT
        exit 0
fi
